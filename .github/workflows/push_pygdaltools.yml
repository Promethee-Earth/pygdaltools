name: pygdaltools - Build and Push

on:
    workflow_dispatch:

permissions:
    contents: read

jobs:
    build:
        name: Build pygdaltools
        runs-on: ubuntu-latest
        environment: share
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Set up python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'
            - name: Install dependencies
              run: |
                    python -m pip install --upgrade pip
                    pip install -r requirements.txt
                    pip install build
            - name: Build pygdaltools
              run: |
                    python -m build
            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                name: python-dist
                path: dist/
    
    push:
        name: Push pygdaltools
        runs-on: ubuntu-latest
        environment: share
        env:
            AWS_REGION: ${{ secrets.AWS_REGION }}
            AWS_DOMAIN: ${{ secrets.AWS_DOMAIN }}
            AWS_OWNER: ${{ secrets.AWS_OWNER }}
        needs: build
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.14'

            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                name: python-dist
                path: dist/

            - name: Install dependencies
              run: |
                    #python -m pip install
                    pip install twine

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}

            - name: Configure AWS profile for CodeArtifact
              run: |
                aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile codeartifact
                aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile codeartifact
                aws configure set region eu-west-3 --profile codeartifact
                aws configure set output json --profile codeartifact
            
            - name: Get CodeArtifact Auth Token
              run: |
                echo "Retrieving CodeArtifact Auth Token..."
                CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
                  --profile=codeartifact \
                  --domain ${{ secrets.AWS_DOMAIN }} \
                  --domain-owner ${{ secrets.AWS_OWNER }} \
                  --region eu-west-3 \
                  --query authorizationToken \
                  --output text)
                echo "CODEARTIFACT_AUTH_TOKEN=${CODEARTIFACT_AUTH_TOKEN}" >> $GITHUB_ENV

            - name: Login to AWS CodeArtifact
              run: |
                    aws codeartifact login --tool twine --repository pygdaltools --domain  ${{ secrets.AWS_DOMAIN }} --domain-owner ${{ secrets.AWS_OWNER }} --region eu-west-3 --profile codeartifact

            - name: Push pygdaltools
              run: |
                    python -m twine upload --repository codeartifact dist/*